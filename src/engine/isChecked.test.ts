import { expect, test } from "vitest";
import { Board, STARTING_BOARD } from "./pieces";
import { isChecked } from "./isChecked";
import { Doc, Id } from "../../convex/_generated/dataModel";

const game: Doc<"games"> = {
  _id: "" as Id<"games">,
  _creationTime: 0,
  board: STARTING_BOARD,
  players: [],
  turn: 1,
  state: "playing",
  history: [],
};

test("starting position", () => {
  expect(isChecked(game, "k")).toEqual(false);
  expect(isChecked(game, "K")).toEqual(false);
});

const checked_cases: Board[][] = [
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "r1", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "r1", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "n1", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "b1", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "q", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", "r2"],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "r1", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "n1", "", "", "", "", ""],
      ["", "", "b2", "", "", "", "", ""],
      ["", "K", "q", "", "", "", "", "r2"],
      ["", "", "b1", "", "", "", "", ""],
      ["", "", "n2", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
];

test.each(checked_cases)("checked", (board) => {
  const checked = isChecked(
    {
      ...game,
      turn: 1,
      board,
    },
    "K"
  );
  expect(checked).toEqual(true);
});

const not_checked_cases: Board[][] = [
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "R1", "", "", "", "r1", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "r1", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", "n1"],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "k", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "K", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "q", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["K", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["n1", "", "", "", "", "", "", ""],
      ["K", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["b1", "", "", "", "", "", "", ""],
      ["K", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["q", "", "", "", "", "", "", ""],
      ["Q", "", "", "", "", "", "", ""],
      ["K", "", "", "", "", "", "", ""],
    ],
  ],
];

test.each(not_checked_cases)("not checked", (board) => {
  expect(isChecked({ ...game, turn: 1, board }, "K")).toEqual(false);
});
