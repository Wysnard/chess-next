import { expect, test } from "vitest";
import { Board, STARTING_BOARD } from "./pieces";
import { Doc, Id } from "../../convex/_generated/dataModel";
import { isCheckedMate } from "./isCheckedMate";

const game: Doc<"games"> = {
  _id: "" as Id<"games">,
  _creationTime: 0,
  board: STARTING_BOARD,
  players: [],
  turn: 1,
  state: "playing",
  history: [],
};

test("starting position", () => {
  expect(isCheckedMate(game, "k")).toEqual(false);
  expect(isCheckedMate(game, "K")).toEqual(false);
});

const checked_mate_cases: Board[][] = [
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["K", "q", "", "", "", "", "r1", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["K", "", "", "", "", "", "", "r2"],
      ["", "", "", "", "", "", "", "r1"],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["K", "", "", "", "", "", "", "r2"],
      ["", "", "", "", "", "", "", "q"],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["P1", "P2", "P3", "", "", "", "", ""],
      ["", "K", "", "", "r1", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["P1", "P2", "P3", "", "", "", "", ""],
      ["", "K", "r1", "", "", "", "", "r2"],
    ],
  ],
  [
    [
      ["r1", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "P2", "P3", "", "", "", "", ""],
      ["q", "K", "", "", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["P1", "P2", "n1", "", "", "", "", ""],
      ["K", "N1", "", "", "", "", "", ""],
    ],
  ],
];

test.each(checked_mate_cases)("checked mate", (board) => {
  expect(isCheckedMate({ ...game, board }, "K")).toEqual(true);
});

const not_checked_mate_cases: Board[][] = [
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "K", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "r1", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "P1", "", "", "", ""],
      ["", "", "", "K", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "r1", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "K", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "q", "", "", "", ""],
      ["", "", "", "K", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "n1", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "K", "", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["P1", "", "", "", "", "", "", ""],
      ["K", "", "", "", "r1", "", "", ""],
    ],
  ],
  [
    [
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["", "", "", "", "", "", "", ""],
      ["p1", "", "", "", "", "", "", ""],
      ["K", "", "", "", "r1", "", "", ""],
    ],
  ],
];

test.each(not_checked_mate_cases)("not checked mate", (board) => {
  expect(isCheckedMate({ ...game, board }, "K")).toEqual(false);
});
